{"version":3,"sources":["components/Result.js","components/App.js","reportWebVitals.js","index.js"],"names":["Result","props","className","result","to","App","React","useState","question","setQuestion","userAnswer","setUserAnswer","answer","setAnswer","isCorrect","setIsCorrect","correctCount","setCorrectCount","incorrectCount","setIncorrectCount","response","setResponse","setResult","tasks","handleSubmit","e","preventDefault","target","value","setTimeout","changeTask","console","log","i","setTask","Math","floor","length","random","generateNumber","useEffect","window","location","href","exact","path","onSubmit","type","placeholder","onChange","onKeyDown","keyCode","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63be87e2.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Result(props) {\r\n  return (\r\n    <div className=\"result\">\r\n      <p>{props.result ? 'Вы выиграли' : 'Вы проиграли'}</p>\r\n      <Link to=\"/game\">Начать сначала</Link>\r\n      <Link to=\"/\">Главное меню</Link>\r\n    </div>\r\n  )\r\n}","import React from 'react'\nimport { Route, Switch, Link } from 'react-router-dom';\nimport Result from './Result'\n\nfunction App() {\n\n  const [question, setQuestion] = React.useState('');\n  const [userAnswer, setUserAnswer] = React.useState('');\n  const [answer, setAnswer] = React.useState('');\n  const [isCorrect, setIsCorrect] = React.useState(false);\n  const [correctCount, setCorrectCount] = React.useState(0);\n  const [incorrectCount, setIncorrectCount] = React.useState(0);\n  const [response, setResponse] = React.useState('');\n  const [result, setResult] = React.useState(null);\n\n  const tasks = [\n    {\n      question: 'Как вас зовут?',\n      answer: 'Максим'\n    },\n    {\n      question: 'Сколько вам лет?',\n      answer: '17'\n    },\n    {\n      question: 'Ваш город?',\n      answer: 'Астана'\n    },\n    {\n      question: 'Ваш дом?',\n      answer: 'Большой'\n    },\n    {\n      question: 'Рост?',\n      answer: '180'\n    },\n    {\n      question: 'Столица Казахстана?',\n      answer: 'Нур-Султан'\n    }\n  ]\n\n  function handleChange(e) {\n    setUserAnswer(e.target.value);\n    handleSubmit(e);\n  }\n\n  function setTask(tasks, i) {\n    setQuestion(tasks[i].question);\n    setAnswer(tasks[i].answer);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if(e.target.value === answer) {\n      setIsCorrect(true);\n      setCorrectCount(correctCount + 1);\n      setResponse('Правильно');\n      setTimeout(() => {\n        setIsCorrect(false);\n        setUserAnswer('');\n        setResponse('');\n      }, 1000)\n    } else {\n      setIsCorrect(false);\n    }\n  }\n\n  function handleKeyDown(e) {\n    if(e.keyCode === 13) {\n      if(e.target.value !== answer) { \n        setIncorrectCount(incorrectCount + 1);\n        setResponse(answer);\n        setTimeout(() => {\n          changeTask();\n          setResponse('');\n        }, 1000)\n      }\n    }\n  }\n\n  function handleSkipTask() {\n    changeTask();\n    setIncorrectCount(incorrectCount + 1);\n    setResponse(answer);\n    changeTask();\n    setTimeout(() => {\n      setResponse('');\n    }, 1000)\n  }\n\n  const changeTask = () => {\n    console.log('Вопрос изменен');\n    setTimeout(() => {\n      setTask(tasks, generateNumber(tasks));\n    }, 1000)\n  };\n\n  function generateNumber(tasks) {\n    return Math.floor(tasks.length * Math.random())\n  }\n\n  React.useEffect(() => {\n    changeTask();\n    console.log('Сгенерирован...')\n  }, [])\n\n  React.useEffect(() => {\n    if(isCorrect) {\n      changeTask();\n    }\n  }, [isCorrect])\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      if(incorrectCount >= 3 && correctCount < 3) {\n      window.location.href = \"/quiz/#/game/result\";\n      setCorrectCount(0);\n      setIncorrectCount(0);\n      setResult(false);\n      } else if(correctCount >= 3 && incorrectCount < 3) {\n      window.location.href = \"/quiz/#/game/result\";\n      setCorrectCount(0);\n      setIncorrectCount(0);\n      setResult(true);\n      }\n    }, 1000)\n  }, [incorrectCount, correctCount])\n\n  return (\n    <div className=\"page\">\n      <header>\n        <Link to=\"/\">\n          <h1 className=\"heading\">Quiz</h1>\n        </Link>\n      </header>\n      <main className=\"content\">\n        <Switch>\n          <Route exact path=\"/\">\n            <div className=\"game-menu\">\n              <Link to=\"/game\">Начать игру</Link>\n            </div>\n          </Route>\n          <Route exact path=\"/game\">\n            <div className=\"task\">\n              <h2 className={`task__question ${isCorrect ? 'task__question_correct' : ''}`}>{question}</h2>\n              <p className=\"task__response\">{response}</p>\n              <form className=\"task__form\" onSubmit={handleSubmit}>\n                <input className={`task__input ${isCorrect ? 'task__input_correct' : ''}`} type=\"text\" placeholder=\"Ответ\" onChange={handleChange} onKeyDown={handleKeyDown} value={userAnswer} />\n              </form>\n              <p className=\"task__correct-count\">Правильных ответов: <span>{correctCount}</span></p>\n              <p className=\"task__incorrect-count\">Неправильных ответов: <span>{incorrectCount}</span></p>\n              <button className=\"task__skip\" onClick={handleSkipTask}>Пропустить</button>\n            </div>\n          </Route>\n          <Route exact path=\"/game/result\">\n            <Result result={result} />\n          </Route>\n        </Switch>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}