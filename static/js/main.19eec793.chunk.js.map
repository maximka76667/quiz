{"version":3,"sources":["components/App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","question","setQuestion","answer","setAnswer","isCorrect","setIsCorrect","correctCount","setCorrectCount","incorrectCount","setIncorrectCount","questions","handleSubmit","e","preventDefault","target","value","setTimeout","keyCode","console","log","changeTask","i","setTask","Math","floor","length","random","generateNumber","useEffect","className","onSubmit","type","onChange","onKeyDown","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAkHeA,MA/Gf,WAAgB,IAAD,EAEmBC,IAAMC,SAAS,IAFlC,mBAENC,EAFM,KAEIC,EAFJ,OAGeH,IAAMC,SAAS,IAH9B,mBAGNG,EAHM,KAGEC,EAHF,OAIqBL,IAAMC,UAAS,GAJpC,mBAINK,EAJM,KAIKC,EAJL,OAK2BP,IAAMC,SAAS,GAL1C,mBAKNO,EALM,KAKQC,EALR,OAM+BT,IAAMC,SAAS,GAN9C,mBAMNS,EANM,KAMUC,EANV,KAQPC,EAAY,CAChB,CACEV,SAAU,wEACVE,OAAQ,wCAEV,CACEF,SAAU,oFACVE,OAAQ,MAEV,CACEF,SAAU,qDACVE,OAAQ,wCAEV,CACEF,SAAU,yCACVE,OAAQ,8CAEV,CACEF,SAAU,4BACVE,OAAQ,QAaZ,SAASS,EAAaC,GACpBA,EAAEC,iBACCD,EAAEE,OAAOC,QAAUb,EACpBc,YAAW,WACTX,GAAa,GACbE,EAAgBD,EAAe,GAC/BM,EAAEE,OAAOC,MAAQ,GACjBC,YAAW,WACTX,GAAa,KACZ,OACF,MAEHA,GAAa,GACVO,EAAEK,SACHC,QAAQC,IAAIP,EAAEK,UAkBpB,IAAMG,EAAa,YArCnB,SAAiBV,EAAWW,GAC1BpB,EAAYS,EAAUW,GAAGrB,UACzBG,EAAUO,EAAUW,GAAGnB,QAoCvBoB,CAAQZ,EAGV,SAAwBA,GACtB,OAAOa,KAAKC,MAAMd,EAAUe,OAASF,KAAKG,UAJvBC,CAAejB,KAmBpC,OAZAZ,IAAM8B,WAAU,WACdR,IACAF,QAAQC,IAAI,8EACX,IAEHrB,IAAM8B,WAAU,WACXxB,IACDgB,IACAF,QAAQC,IAAI,sFAEb,CAACf,IAGF,sBAAKyB,UAAU,MAAf,UACE,iCAAQ,wCACR,+BACE,sBAAKA,UAAU,OAAf,UACE,oBAAIA,UAAU,iBAAd,SAAgC7B,IAChC,sBAAM6B,UAAU,aAAaC,SAAUnB,EAAvC,SACE,uBAAOkB,UAAU,cAAcE,KAAK,OAAOC,SApErD,SAAsBpB,GACpBD,EAAaC,IAmE8DqB,UAxC7E,SAAuBrB,GACJ,KAAdA,EAAEK,SACAL,EAAEE,OAAOC,QAAUb,GACpBO,EAAkBD,EAAiB,QAuCjC,mBAAGqB,UAAU,8BAAb,SAA6CzB,GAAa,4DAC1D,wBAAQyB,UAAU,aAAaK,QAnCvC,WACEd,IACAX,EAAkBD,EAAiB,IAiC7B,0EACA,oBAAGqB,UAAU,sBAAb,sHAAwDvB,KACxD,oBAAGuB,UAAU,wBAAb,kIAA4DrB,cC/FvD2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.19eec793.chunk.js","sourcesContent":["import React from 'react'\nimport './App.css';\n\nfunction App() {\n\n  const [question, setQuestion] = React.useState('');\n  const [answer, setAnswer] = React.useState('');\n  const [isCorrect, setIsCorrect] = React.useState(false);\n  const [correctCount, setCorrectCount] = React.useState(0);\n  const [incorrectCount, setIncorrectCount] = React.useState(0);\n\n  const questions = [\n    {\n      question: 'Как вас зовут?',\n      answer: 'Максим'\n    },\n    {\n      question: 'Сколько вам лет?',\n      answer: '17'\n    },\n    {\n      question: 'Ваш город?',\n      answer: 'Астана'\n    },\n    {\n      question: 'Ваш дом?',\n      answer: 'Большой'\n    },\n    {\n      question: 'Рост?',\n      answer: '180'\n    }\n  ]\n\n  function handleChange(e) {\n    handleSubmit(e);\n  }\n\n  function setTask(questions, i) {\n    setQuestion(questions[i].question);\n    setAnswer(questions[i].answer);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if(e.target.value === answer) {\n      setTimeout(() => {\n        setIsCorrect(true);\n        setCorrectCount(correctCount + 1);\n        e.target.value = '';\n        setTimeout(() => {\n          setIsCorrect(false);\n        }, 1000)\n      }, 500)\n    } else {\n      setIsCorrect(false);\n      if(e.keyCode) {\n        console.log(e.keyCode);\n      }\n    }\n  }\n\n  function handleKeyDown(e) {\n    if(e.keyCode === 13) {\n      if(e.target.value !== answer) { \n        setIncorrectCount(incorrectCount + 1);\n      }\n    }\n  }\n\n  function handleMissTask() {\n    changeTask();\n    setIncorrectCount(incorrectCount + 1);\n  }\n\n  const changeTask = () => {\n    setTask(questions, generateNumber(questions));\n  };\n\n  function generateNumber(questions) {\n    return Math.floor(questions.length * Math.random())\n  }\n\n  React.useEffect(() => {\n    changeTask();\n    console.log('Сгенерирован')\n  }, [])\n\n  React.useEffect(() => {\n    if(isCorrect) {\n      changeTask();\n      console.log('Вопрос изменен');\n    }\n  }, [isCorrect])\n\n  return (\n    <div className=\"App\">\n      <header><h1>Quiz</h1></header>\n      <main>\n        <div className=\"task\">\n          <h2 className=\"task__question\">{question}</h2>\n          <form className=\"task__form\" onSubmit={handleSubmit}>\n            <input className=\"task__input\" type=\"text\" onChange={handleChange} onKeyDown={handleKeyDown} />\n          </form>\n          <p className=\"task__response task_correct\">{ isCorrect && 'Правильно!'}</p>\n          <button className=\"task__miss\" onClick={handleMissTask}>Пропустить</button>\n          <p className=\"task__correct-count\">Правильных ответов: {correctCount}</p>\n          <p className=\"task__incorrect-count\">Неправильных ответов: {incorrectCount}</p>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}